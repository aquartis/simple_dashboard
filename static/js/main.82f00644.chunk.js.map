{"version":3,"sources":["components/main-header.js","components/settings.js","components/context.js","functions/functions.js","components/tableBody.js","components/table.js","index.js","App.js","serviceWorker.js"],"names":["MainHeader","_this$props$settings","this","props","settings","name","func","react_default","a","createElement","className","main_header_Button","clasName","emptyButton","index_es","icon","faCog","React","Component","Button","onClick","children","alert","TableSettings","list","keys","data","columns","push","key","type","defaultChecked","onChange","onclick","hide","faTimes","color","all","DataContext","createContext","DataProvider","Provider","Consumer","compare","elemA","elemB","toLowerCase","b","isNaN","getArrForDefs","arr","contentArr","elemSort","document","documentElement","clientWidth","length","map","el","headerName","field","comparator","filter","cellClass","TableBody","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onGridReady","params","gridApi","api","gridColumnApi","columnApi","sizeColumnsToFit","window","addEventListener","setTimeout","state","columnDefs","headers","dataArr","rowData","defaultColDef","sortable","resizable","rowClass","console","log","style","overflow","flexGrow","height","width","main","root","getElementById","Table","showSettings","status","settingsActive","setState","hideColums","e","target","checked","activeAllRows","activeRows","getActiveRowsObj","getRowsArray","dataArray","onChangeInput","obj","headerArr","rowsArray","mainHeaderData","settingsData","tableHeaders","entries","modalSettings","table_Modal","value","main_header_MainHeader","tableBody_TableBody","result","showAll","arguments","undefined","forEach","element","Modal","_this2","appendChild","removeChild","_this3","classList","add","contains","ReactDOM","createPortal","App","documentWidth","startData","toRender","App_TablePage","Fragment","TablePage","table_Table","Boolean","location","hostname","match","_callee","regenerator_default","wrap","_context","prev","next","fetch","then","res","json","catch","error","render","src_App","stop","getDate","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82f00644.chunk.js","sourcesContent":["import React from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {faCog} from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nclass MainHeader extends React.Component{\r\n    render(){\r\n       const {name, func}=this.props.settings;\r\n        return(\r\n            <div className='settings-box'>\r\n                <h5>{name}</h5>\r\n                <div className='btns-box'>\r\n                    <Button clasName='empty-btn' func={emptyButton}>Export</Button>\r\n                    <Button clasName='empty-btn' func={emptyButton}>Subscribe</Button>\r\n                    <Button clasName='settings-btn' func={func}>\r\n                        <FontAwesomeIcon icon={faCog}/>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Button extends React.Component{\r\n    render(){\r\n        return(\r\n            <button className={this.props.clasName} onClick={this.props.func}>{this.props.children}</button>\r\n        )\r\n    }\r\n}\r\nconst emptyButton=()=>{\r\n    alert('There can be some function...')\r\n}\r\nexport {MainHeader};","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport default function TableSettings (props){\r\n        const list=[];\r\n        for(let keys in props.data.columns){\r\n            list.push(\r\n                <label key={keys+props.data.columns[keys]}>\r\n                    {keys} <input name={keys}  type='checkbox' defaultChecked={props.data.columns[keys]} onChange={props.onclick}/>\r\n                </label>\r\n            )\r\n        }\r\n        return(\r\n            <div className='modal-form'>\r\n          <form className='settings-list'>\r\n              <div className='settings-list-header'>\r\n                  <h4>{props.data.name} Table Configuration</h4>\r\n                <span className='settings-list-icon' onClick={props.data.hide}>\r\n                    <FontAwesomeIcon icon={faTimes} color='rgb(49, 49, 47)'/>\r\n                </span>\r\n              </div>\r\n              <label key={props.data.all}>\r\n                  Column <span>Show</span><input type='checkbox' defaultChecked={props.data.all} onChange={props.hide}/>\r\n              </label>\r\n                {list}\r\n                <button className='settings-list-close' onClick={props.data.hide}>Close</button>\r\n          </form>\r\n          </div>\r\n        )\r\n    }\r\n\r\n\r\n/* export {TableSettings}; */","import React from 'react';\r\n\r\nconst DataContext=React.createContext();\r\nconst DataProvider=DataContext.Provider;\r\nconst DataConsumer=DataContext.Consumer;\r\n\r\nexport {DataProvider, DataConsumer};","// common functions\r\n\r\nconst compare=(elemA, elemB)=>{\r\n    let a=elemA.toLowerCase();\r\n    let b=elemB.toLowerCase();\r\n    const type=isNaN(a)?'string':'number';\r\n    switch(type){\r\n        case 'number':\r\n            return a-b;\r\n        case 'string':\r\n                if (a < b) return -1;\r\n                else if (a > b) return 1;\r\n                return 0;\r\n    }\r\n}\r\nexport function getArrForDefs(arr, contentArr){\r\n    let elemSort;\r\n    const cellWidth=document.documentElement.clientWidth/arr.length;\r\n    const result=arr.map(el=>{\r\n         elemSort=isNaN(contentArr[el])?\"agTextColumnFilter\":\"agNumberColumnFilter\";\r\n        return {headerName:el, field:el, comparator:compare, filter:elemSort, cellClass:'my-thead-class', /* width:cellWidth */}\r\n    })\r\n    return result;\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\n/* import 'ag-grid-community/dist/styles/ag-theme-balham.css'; */\r\nimport '../styles/new-theme.css';\r\nimport {getArrForDefs} from '../functions/functions';\r\n\r\nexport default class TableBody extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            columnDefs:getArrForDefs(this.props.headers, this.props.dataArr[0]),\r\n            rowData:this.props.dataArr,\r\n            defaultColDef:{\r\n                sortable: true,\r\n                resizable: true,\r\n                filter:true,\r\n            },\r\n            rowClass:'row-class',\r\n        }\r\n    }\r\n    onGridReady = params => {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n    \r\n        params.api.sizeColumnsToFit();\r\n        window.addEventListener(\"resize\", function() {\r\n          setTimeout(function() {\r\n            params.api.sizeColumnsToFit();\r\n          });\r\n        });\r\n    \r\n        params.api.sizeColumnsToFit();\r\n      };\r\n    render(){\r\n        console.log(this)\r\n       \r\n        return(\r\n            <div style={{ overflow: \"hidden\", flexGrow: \"1\" }}>\r\n            <div\r\n            className=\"ag-theme-balham\"\r\n            style={{ \r\n            height: '80vh', \r\n            width: '100%',\r\n             }}\r\n             >\r\n                <AgGridReact\r\n                     columnDefs={this.state.columnDefs}\r\n                     rowData={this.state.rowData}\r\n                     defaultColDef={this.state.defaultColDef}\r\n                     onGridReady={this.onGridReady}>\r\n                </AgGridReact>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {MainHeader} from './main-header';\r\nimport ReactDOM from 'react-dom';\r\nimport TableSettings from './settings';\r\nimport {DataProvider} from './context';\r\nimport TableBody from './tableBody';\r\n\r\n\r\n\r\nconst root=document.getElementById(\"modal-root\");\r\n\r\nclass Table extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n      headerArr:[],\r\n      activeAllRows:true,\r\n      activeRows:getActiveRowsObj(getRowsArray(this.props.dataArray[0])),\r\n      settingsActive:false,\r\n        }\r\n        this.rowsArray=getRowsArray(this.props.dataArray[0]); \r\n    }\r\n    showSettings=()=>{\r\n        const status=this.state.settingsActive;\r\n        this.setState({\r\n            settingsActive:!status,\r\n        })\r\n    }\r\n    hideColums=(e)=>{\r\n        const status=e.target.checked;\r\n        status===false?this.setState({\r\n            activeAllRows:!this.state.activeAllRows, \r\n            activeRows:getActiveRowsObj(getRowsArray(this.props.dataArray[0]), false),\r\n        }):\r\n        this.setState({\r\n            activeAllRows:!this.state.activeAllRows,\r\n            activeRows:getActiveRowsObj(getRowsArray(this.props.dataArray[0]), true),\r\n        })\r\n    }\r\n    onChangeInput=(e)=>{\r\n        const name=e.target.name;\r\n        const obj=this.state.activeRows;\r\n        obj[name]=e.target.checked;\r\n        const showAll=this.state.activeAllRows;\r\n        showAll===true?\r\n        this.setState({\r\n            activeRows:obj,\r\n        }):\r\n        this.setState({\r\n            activeAllRows:!this.state.activeAllRows,\r\n            activeRows:obj,\r\n        })\r\n    }\r\n  \r\n    render(){\r\n        const mainHeaderData={name:this.props.name, func:this.showSettings};\r\n        const settingsData={all:this.state.activeAllRows, columns:this.state.activeRows, name:this.props.name, hide:this.showSettings};\r\n        const tableHeaders=Object.entries(this.state.activeRows).filter(el=>{\r\n            return el[1]\r\n        }).map(el=>{\r\n            return el[0]\r\n        })\r\n        console.log(tableHeaders)\r\n        const modalSettings=this.state.settingsActive?(\r\n            <Modal hide={this.showSettings}>\r\n                <TableSettings data={settingsData} onclick={this.onChangeInput} hide={this.hideColums}/>\r\n            </Modal>\r\n        ):null;\r\n        return(\r\n            <div className='table-main'>\r\n            <DataProvider value={this.props.dataArray}>\r\n            <MainHeader settings={mainHeaderData}></MainHeader>\r\n            <TableBody key={tableHeaders.length} headers={tableHeaders} dataArr={this.props.dataArray}></TableBody>\r\n            {modalSettings}\r\n            </DataProvider>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction getRowsArray(obj) {\r\n    let result = [];\r\n    for (let key in obj) {\r\n        result.push(key)\r\n    }\r\n    return result;\r\n}\r\nfunction getActiveRowsObj(arr, showAll=true){\r\nconst result={};\r\narr.forEach(element => {\r\n   if(showAll){\r\n       result[element]=true\r\n   } \r\n   else{\r\n       result[element]=false\r\n   }\r\n});\r\nreturn result;\r\n}\r\n\r\nclass Modal extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.el=document.createElement('div');\r\n    }\r\n    componentDidMount(){\r\n    root.appendChild(this.el)\r\n     }\r\n    componentWillUnmount(){\r\n    root.removeChild(this.el)\r\n    }\r\n    render() {\r\n        this.el.classList.add('modal');\r\n        this.el.onclick=(e)=>{\r\n            if(e.target.classList.contains('modal')){\r\n                this.props.hide(e)\r\n            }\r\n        }\r\n        return ReactDOM.createPortal(\r\n          this.props.children,\r\n          this.el,\r\n        );\r\n      }\r\n    }\r\nexport {Table};\r\nexport {Modal};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nlet params;\nasync function getDate(){\n await fetch('https://api.coinmarketcap.com/v1/ticker/').then(res=>res.json()).then(res=>{\n    params=res;\n    console.log(res)}).catch(error=>console.log(error));\n    ReactDOM.render(<App startData={params}/>, document.getElementById('root'));\n}\n\ngetDate();\n\nserviceWorker.unregister();\n","import React from 'react';\nimport './styles/App.css';\nimport {Table} from './components/table';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      documentWidth:document.documentElement.clientWidth,\n    }\n  } \n  render(){\n    const startData=this.props.startData;\n    const toRender=this.state.documentWidth>=990?<TablePage startData={startData}/>:<div><p>Hello</p></div>\n    return(\n      <>\n      {toRender}\n      </>\n    )\n  }\n}\n\nconst TablePage=(props)=>{\n  return(\n    <div>\n      <h1>Hello trader</h1>\n      <Table name='Market Data' dataArray={props.startData}></Table>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}